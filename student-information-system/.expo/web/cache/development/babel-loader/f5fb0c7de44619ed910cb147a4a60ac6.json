{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\projects\\\\student-information-system\\\\student-information-system\\\\node_modules\\\\react-native-calendar-picker\\\\CalendarPicker\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { makeStyles } from \"./makeStyles\";\nimport { Utils } from \"./Utils\";\nimport HeaderControls from \"./HeaderControls\";\nimport Weekdays from \"./Weekdays\";\nimport DaysGridView from \"./DaysGridView\";\nimport MonthSelector from \"./MonthSelector\";\nimport YearSelector from \"./YearSelector\";\nimport Swiper from \"./Swiper\";\nimport moment from 'moment';\nvar SWIPE_LEFT = 'SWIPE_LEFT';\nvar SWIPE_RIGHT = 'SWIPE_RIGHT';\nvar _swipeConfig = {\n  velocityThreshold: 0.3,\n  directionalOffsetThreshold: 80\n};\n\nvar CalendarPicker = function (_Component) {\n  _inherits(CalendarPicker, _Component);\n\n  var _super = _createSuper(CalendarPicker);\n\n  function CalendarPicker(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarPicker);\n\n    _this = _super.call(this, props);\n    _this.state = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      currentMonth: null,\n      currentYear: null,\n      currentView: 'days',\n      selectedStartDate: props.selectedStartDate && moment(props.selectedStartDate),\n      selectedEndDate: props.selectedEndDate && moment(props.selectedEndDate),\n      minDate: props.minDate && moment(props.minDate),\n      maxDate: props.maxDate && moment(props.maxDate),\n      styles: {}\n    }, _this.updateScaledStyles(props)), _this.updateMonthYear(props.initialDate)), _this.updateDayOfWeekStyles(props.initialDate)), _this.updateDisabledDates(props.disabledDates)), _this.updateMinMaxRanges(props.minRangeDuration, props.maxRangeDuration));\n    _this.updateScaledStyles = _this.updateScaledStyles.bind(_assertThisInitialized(_this));\n    _this.updateMonthYear = _this.updateMonthYear.bind(_assertThisInitialized(_this));\n    _this.updateDisabledDates = _this.updateDisabledDates.bind(_assertThisInitialized(_this));\n    _this.updateMinMaxRanges = _this.updateMinMaxRanges.bind(_assertThisInitialized(_this));\n    _this.updateDayOfWeekStyles = _this.updateDayOfWeekStyles.bind(_assertThisInitialized(_this));\n    _this.handleOnPressPrevious = _this.handleOnPressPrevious.bind(_assertThisInitialized(_this));\n    _this.handleOnPressNext = _this.handleOnPressNext.bind(_assertThisInitialized(_this));\n    _this.handleOnPressDay = _this.handleOnPressDay.bind(_assertThisInitialized(_this));\n    _this.handleOnPressMonth = _this.handleOnPressMonth.bind(_assertThisInitialized(_this));\n    _this.handleOnPressYear = _this.handleOnPressYear.bind(_assertThisInitialized(_this));\n    _this.handleOnSelectMonthYear = _this.handleOnSelectMonthYear.bind(_assertThisInitialized(_this));\n    _this.onSwipe = _this.onSwipe.bind(_assertThisInitialized(_this));\n    _this.resetSelections = _this.resetSelections.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CalendarPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var doStateUpdate = false;\n      var newStyles = {};\n\n      if (prevProps.width !== this.props.width || prevProps.height !== this.props.height) {\n        newStyles = this.updateScaledStyles(this.props);\n        doStateUpdate = true;\n      }\n\n      var newMonthYear = {};\n\n      if (!moment(prevProps.initialDate).isSame(this.props.initialDate, 'day')) {\n        newMonthYear = this.updateMonthYear(this.props.initialDate);\n        doStateUpdate = true;\n      }\n\n      var selectedDateRanges = {};\n      var _this$props = this.props,\n          selectedStartDate = _this$props.selectedStartDate,\n          selectedEndDate = _this$props.selectedEndDate;\n\n      if (selectedStartDate !== prevProps.selectedStartDate || selectedEndDate !== prevProps.selectedEndDate) {\n        selectedDateRanges = {\n          selectedStartDate: selectedStartDate && moment(selectedStartDate),\n          selectedEndDate: selectedEndDate && moment(selectedEndDate)\n        };\n        doStateUpdate = true;\n      }\n\n      var customDatesStyles = {};\n\n      if (this.props.startFromMonday !== prevProps.startFromMonday || this.props.dayOfWeekStyles !== prevProps.dayOfWeekStyles || this.props.customDatesStylesPriority !== prevProps.customDatesStylesPriority || this.props.customDatesStyles !== prevProps.customDatesStyles) {\n        customDatesStyles = this.updateDayOfWeekStyles(moment({\n          year: this.state.currentYear,\n          month: this.state.currentMonth\n        }));\n        doStateUpdate = true;\n      }\n\n      var disabledDates = {};\n\n      if (prevProps.disabledDates !== this.props.disabledDates) {\n        disabledDates = this.updateDisabledDates(this.props.disabledDates);\n        doStateUpdate = true;\n      }\n\n      var rangeDurations = {};\n\n      if (prevProps.minRangeDuration !== this.props.minRangeDuration || prevProps.maxRangeDuration !== this.props.maxRangeDuration) {\n        var _this$props2 = this.props,\n            minRangeDuration = _this$props2.minRangeDuration,\n            maxRangeDuration = _this$props2.maxRangeDuration;\n        rangeDurations = this.updateMinMaxRanges(minRangeDuration, maxRangeDuration);\n        doStateUpdate = true;\n      }\n\n      var minDate = this.props.minDate && moment(this.props.minDate);\n      var maxDate = this.props.maxDate && moment(this.props.maxDate);\n\n      if (doStateUpdate) {\n        this.setState(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, newStyles), newMonthYear), selectedDateRanges), customDatesStyles), disabledDates), rangeDurations), {}, {\n          minDate: minDate,\n          maxDate: maxDate\n        }));\n      }\n    }\n  }, {\n    key: \"updateScaledStyles\",\n    value: function updateScaledStyles(props) {\n      var scaleFactor = props.scaleFactor,\n          selectedDayColor = props.selectedDayColor,\n          selectedDayTextColor = props.selectedDayTextColor,\n          todayBackgroundColor = props.todayBackgroundColor,\n          width = props.width,\n          height = props.height,\n          dayShape = props.dayShape;\n      var containerWidth = width ? width : Dimensions.get('window').width;\n      var containerHeight = height ? height : Dimensions.get('window').height;\n      return {\n        styles: makeStyles({\n          containerWidth: containerWidth,\n          containerHeight: containerHeight,\n          scaleFactor: scaleFactor,\n          selectedDayColor: selectedDayColor,\n          selectedDayTextColor: selectedDayTextColor,\n          todayBackgroundColor: todayBackgroundColor,\n          dayShape: dayShape\n        })\n      };\n    }\n  }, {\n    key: \"updateMonthYear\",\n    value: function updateMonthYear() {\n      var initialDate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.initialDate;\n      return {\n        currentMonth: parseInt(moment(initialDate).month()),\n        currentYear: parseInt(moment(initialDate).year())\n      };\n    }\n  }, {\n    key: \"updateDisabledDates\",\n    value: function updateDisabledDates() {\n      var _disabledDates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var disabledDates = [];\n\n      if (_disabledDates) {\n        if (Array.isArray(_disabledDates)) {\n          _disabledDates.map(function (date) {\n            var thisDate = moment(date);\n            thisDate.set({\n              hour: 12,\n              minute: 0,\n              second: 0,\n              millisecond: 0\n            });\n            disabledDates.push(thisDate.valueOf());\n          });\n        } else if (_disabledDates instanceof Function) {\n          disabledDates = _disabledDates;\n        }\n      }\n\n      return {\n        disabledDates: disabledDates\n      };\n    }\n  }, {\n    key: \"updateMinMaxRanges\",\n    value: function updateMinMaxRanges(_minRangeDuration, _maxRangeDuration) {\n      var minRangeDuration = [];\n      var maxRangeDuration = [];\n\n      if (_minRangeDuration) {\n        if (Array.isArray(_minRangeDuration)) {\n          _minRangeDuration.map(function (mrd) {\n            var thisDate = moment(mrd.date);\n            thisDate.set({\n              hour: 12,\n              minute: 0,\n              second: 0,\n              millisecond: 0\n            });\n            minRangeDuration.push({\n              date: thisDate.valueOf(),\n              minDuration: mrd.minDuration\n            });\n          });\n        } else {\n          minRangeDuration = _minRangeDuration;\n        }\n      }\n\n      if (_maxRangeDuration) {\n        if (Array.isArray(_maxRangeDuration)) {\n          _maxRangeDuration.map(function (mrd) {\n            var thisDate = moment(mrd.date);\n            thisDate.set({\n              hour: 12,\n              minute: 0,\n              second: 0,\n              millisecond: 0\n            });\n            maxRangeDuration.push({\n              date: thisDate.valueOf(),\n              maxDuration: mrd.maxDuration\n            });\n          });\n        } else {\n          maxRangeDuration = _maxRangeDuration;\n        }\n      }\n\n      return {\n        minRangeDuration: minRangeDuration,\n        maxRangeDuration: maxRangeDuration\n      };\n    }\n  }, {\n    key: \"handleOnPressDay\",\n    value: function handleOnPressDay(day) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentYear = _this$state.currentYear,\n          currentMonth = _this$state.currentMonth,\n          selectedStartDate = _this$state.selectedStartDate,\n          selectedEndDate = _this$state.selectedEndDate;\n      var _this$props3 = this.props,\n          allowRangeSelection = _this$props3.allowRangeSelection,\n          allowBackwardRangeSelect = _this$props3.allowBackwardRangeSelect,\n          enableDateChange = _this$props3.enableDateChange,\n          onDateChange = _this$props3.onDateChange;\n\n      if (!enableDateChange) {\n        return;\n      }\n\n      var date = moment({\n        year: currentYear,\n        month: currentMonth,\n        day: day,\n        hour: 12\n      });\n\n      if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\n        if (date.isSameOrAfter(selectedStartDate, 'day')) {\n          this.setState({\n            selectedEndDate: date\n          });\n          onDateChange(date, Utils.END_DATE);\n        } else if (allowBackwardRangeSelect) {\n          var endDate = selectedStartDate.clone();\n          this.setState({\n            selectedStartDate: date,\n            selectedEndDate: endDate\n          }, function () {\n            onDateChange(_this2.state.selectedStartDate, Utils.START_DATE);\n            onDateChange(_this2.state.selectedEndDate, Utils.END_DATE);\n          });\n        }\n      } else {\n        var syncEndDate = !!selectedEndDate;\n        this.setState({\n          selectedStartDate: date,\n          selectedEndDate: null\n        }, function () {\n          onDateChange(_this2.state.selectedStartDate, Utils.START_DATE);\n\n          if (syncEndDate) {\n            onDateChange(null, Utils.END_DATE);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"updateDayOfWeekStyles\",\n    value: function updateDayOfWeekStyles(currentDate) {\n      var _this$props4 = this.props,\n          startFromMonday = _this$props4.startFromMonday,\n          dayOfWeekStyles = _this$props4.dayOfWeekStyles,\n          propsCustomDatesStyles = _this$props4.customDatesStyles,\n          customDatesStylesPriority = _this$props4.customDatesStylesPriority;\n      var day = moment(currentDate).startOf('month');\n      var customDayOfWeekStyles = [];\n\n      do {\n        var dayIndex = day.day();\n\n        if (startFromMonday) {\n          dayIndex = dayIndex - 1;\n\n          if (dayIndex < 0) {\n            dayIndex = 6;\n          }\n        }\n\n        var currentDayStyle = dayOfWeekStyles[dayIndex];\n\n        if (currentDayStyle) {\n          customDayOfWeekStyles.push({\n            date: day.clone(),\n            textStyle: currentDayStyle\n          });\n        }\n      } while (day.add(1, 'day').isSame(currentDate, 'month'));\n\n      var customDatesStyles = [];\n\n      if (customDatesStylesPriority === 'dayOfWeek') {\n        customDatesStyles = [].concat(customDayOfWeekStyles, _toConsumableArray(propsCustomDatesStyles));\n      } else {\n        customDatesStyles = [].concat(_toConsumableArray(propsCustomDatesStyles), customDayOfWeekStyles);\n      }\n\n      return {\n        customDatesStyles: customDatesStyles\n      };\n    }\n  }, {\n    key: \"handleOnPressPrevious\",\n    value: function handleOnPressPrevious() {\n      var _this$state2 = this.state,\n          currentMonth = _this$state2.currentMonth,\n          currentYear = _this$state2.currentYear;\n      var previousMonth = currentMonth - 1;\n\n      if (previousMonth < 0) {\n        previousMonth = 11;\n        currentYear--;\n      }\n\n      this.handleOnPressFinisher({\n        year: currentYear,\n        month: previousMonth\n      });\n    }\n  }, {\n    key: \"handleOnPressNext\",\n    value: function handleOnPressNext() {\n      var _this$state3 = this.state,\n          currentMonth = _this$state3.currentMonth,\n          currentYear = _this$state3.currentYear;\n      var nextMonth = currentMonth + 1;\n\n      if (nextMonth > 11) {\n        nextMonth = 0;\n        currentYear++;\n      }\n\n      this.handleOnPressFinisher({\n        year: currentYear,\n        month: nextMonth\n      });\n    }\n  }, {\n    key: \"handleOnPressFinisher\",\n    value: function handleOnPressFinisher(_ref) {\n      var year = _ref.year,\n          month = _ref.month;\n      var dayOfWeekStyles = {};\n      var currentMonthYear = moment({\n        year: year,\n        month: month\n      });\n\n      try {\n        if (Object.entries(this.props.dayOfWeekStyles).length) {\n          dayOfWeekStyles = this.updateDayOfWeekStyles(currentMonthYear);\n        }\n      } catch (error) {\n        console.log('dayOfWeekStyles error');\n      }\n\n      this.setState(_objectSpread(_objectSpread({}, dayOfWeekStyles), {}, {\n        currentMonth: parseInt(month),\n        currentYear: parseInt(year)\n      }));\n      this.props.onMonthChange && this.props.onMonthChange(currentMonthYear);\n    }\n  }, {\n    key: \"handleOnPressYear\",\n    value: function handleOnPressYear() {\n      this.setState({\n        currentView: 'years'\n      });\n    }\n  }, {\n    key: \"handleOnPressMonth\",\n    value: function handleOnPressMonth() {\n      this.setState({\n        currentView: 'months'\n      });\n    }\n  }, {\n    key: \"handleOnSelectMonthYear\",\n    value: function handleOnSelectMonthYear(_ref2) {\n      var month = _ref2.month,\n          year = _ref2.year;\n      this.setState({\n        currentYear: year,\n        currentMonth: month,\n        currentView: 'days'\n      });\n    }\n  }, {\n    key: \"onSwipe\",\n    value: function onSwipe(gestureName) {\n      if (typeof this.props.onSwipe === 'function') {\n        this.props.onSwipe(gestureName);\n        return;\n      }\n\n      switch (gestureName) {\n        case SWIPE_LEFT:\n          this.handleOnPressNext();\n          break;\n\n        case SWIPE_RIGHT:\n          this.handleOnPressPrevious();\n          break;\n      }\n    }\n  }, {\n    key: \"resetSelections\",\n    value: function resetSelections() {\n      this.setState({\n        selectedStartDate: null,\n        selectedEndDate: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          currentMonth = _this$state4.currentMonth,\n          currentYear = _this$state4.currentYear,\n          minDate = _this$state4.minDate,\n          maxDate = _this$state4.maxDate,\n          minRangeDuration = _this$state4.minRangeDuration,\n          maxRangeDuration = _this$state4.maxRangeDuration,\n          selectedStartDate = _this$state4.selectedStartDate,\n          selectedEndDate = _this$state4.selectedEndDate,\n          disabledDates = _this$state4.disabledDates,\n          styles = _this$state4.styles,\n          customDatesStyles = _this$state4.customDatesStyles;\n      var _this$props5 = this.props,\n          allowRangeSelection = _this$props5.allowRangeSelection,\n          allowBackwardRangeSelect = _this$props5.allowBackwardRangeSelect,\n          startFromMonday = _this$props5.startFromMonday,\n          initialDate = _this$props5.initialDate,\n          weekdays = _this$props5.weekdays,\n          months = _this$props5.months,\n          previousComponent = _this$props5.previousComponent,\n          nextComponent = _this$props5.nextComponent,\n          previousTitle = _this$props5.previousTitle,\n          nextTitle = _this$props5.nextTitle,\n          previousTitleStyle = _this$props5.previousTitleStyle,\n          nextTitleStyle = _this$props5.nextTitleStyle,\n          textStyle = _this$props5.textStyle,\n          todayTextStyle = _this$props5.todayTextStyle,\n          selectedDayStyle = _this$props5.selectedDayStyle,\n          selectedRangeStartStyle = _this$props5.selectedRangeStartStyle,\n          selectedRangeStyle = _this$props5.selectedRangeStyle,\n          selectedRangeEndStyle = _this$props5.selectedRangeEndStyle,\n          disabledDatesTextStyle = _this$props5.disabledDatesTextStyle,\n          swipeConfig = _this$props5.swipeConfig,\n          enableDateChange = _this$props5.enableDateChange,\n          restrictMonthNavigation = _this$props5.restrictMonthNavigation,\n          headingLevel = _this$props5.headingLevel,\n          dayLabelsWrapper = _this$props5.dayLabelsWrapper,\n          dayOfWeekStyles = _this$props5.dayOfWeekStyles,\n          selectMonthTitle = _this$props5.selectMonthTitle,\n          selectYearTitle = _this$props5.selectYearTitle,\n          showDayStragglers = _this$props5.showDayStragglers,\n          monthYearHeaderWrapperStyle = _this$props5.monthYearHeaderWrapperStyle;\n      var content;\n\n      switch (this.state.currentView) {\n        case 'months':\n          content = React.createElement(MonthSelector, {\n            styles: styles,\n            textStyle: textStyle,\n            title: selectMonthTitle,\n            currentYear: currentYear,\n            months: months,\n            minDate: minDate,\n            maxDate: maxDate,\n            onSelectMonth: this.handleOnSelectMonthYear,\n            headingLevel: headingLevel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 9\n            }\n          });\n          break;\n\n        case 'years':\n          content = React.createElement(YearSelector, {\n            styles: styles,\n            textStyle: textStyle,\n            title: selectYearTitle,\n            initialDate: moment(initialDate),\n            currentMonth: currentMonth,\n            currentYear: currentYear,\n            minDate: minDate,\n            maxDate: maxDate,\n            restrictNavigation: restrictMonthNavigation,\n            previousComponent: previousComponent,\n            nextComponent: nextComponent,\n            previousTitle: previousTitle,\n            nextTitle: nextTitle,\n            previousTitleStyle: previousTitleStyle,\n            nextTitleStyle: nextTitleStyle,\n            onSelectYear: this.handleOnSelectMonthYear,\n            headingLevel: headingLevel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 9\n            }\n          });\n          break;\n\n        default:\n          content = React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 9\n            }\n          }, React.createElement(HeaderControls, {\n            styles: styles,\n            currentMonth: currentMonth,\n            currentYear: currentYear,\n            initialDate: moment(initialDate),\n            onPressPrevious: this.handleOnPressPrevious,\n            onPressNext: this.handleOnPressNext,\n            onPressMonth: this.handleOnPressMonth,\n            onPressYear: this.handleOnPressYear,\n            months: months,\n            previousComponent: previousComponent,\n            nextComponent: nextComponent,\n            previousTitle: previousTitle,\n            nextTitle: nextTitle,\n            previousTitleStyle: previousTitleStyle,\n            nextTitleStyle: nextTitleStyle,\n            textStyle: textStyle,\n            restrictMonthNavigation: restrictMonthNavigation,\n            minDate: minDate,\n            maxDate: maxDate,\n            headingLevel: headingLevel,\n            monthYearHeaderWrapperStyle: monthYearHeaderWrapperStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 11\n            }\n          }), React.createElement(Weekdays, {\n            styles: styles,\n            startFromMonday: startFromMonday,\n            weekdays: weekdays,\n            textStyle: textStyle,\n            dayLabelsWrapper: dayLabelsWrapper,\n            dayOfWeekStyles: dayOfWeekStyles,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 11\n            }\n          }), React.createElement(DaysGridView, {\n            enableDateChange: enableDateChange,\n            month: currentMonth,\n            year: currentYear,\n            styles: styles,\n            onPressDay: this.handleOnPressDay,\n            disabledDates: disabledDates,\n            disabledDatesTextStyle: disabledDatesTextStyle,\n            minRangeDuration: minRangeDuration,\n            maxRangeDuration: maxRangeDuration,\n            startFromMonday: startFromMonday,\n            allowRangeSelection: allowRangeSelection,\n            allowBackwardRangeSelect: allowBackwardRangeSelect,\n            selectedStartDate: selectedStartDate,\n            selectedEndDate: selectedEndDate,\n            minDate: minDate,\n            maxDate: maxDate,\n            showDayStragglers: showDayStragglers,\n            textStyle: textStyle,\n            todayTextStyle: todayTextStyle,\n            selectedDayStyle: selectedDayStyle,\n            selectedRangeStartStyle: selectedRangeStartStyle,\n            selectedRangeStyle: selectedRangeStyle,\n            selectedRangeEndStyle: selectedRangeEndStyle,\n            customDatesStyles: customDatesStyles,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 11\n            }\n          }));\n      }\n\n      return React.createElement(Swiper, {\n        onSwipe: function onSwipe(direction) {\n          return _this3.props.enableSwipe && _this3.onSwipe(direction);\n        },\n        config: _objectSpread(_objectSpread({}, _swipeConfig), swipeConfig),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        styles: styles.calendar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 9\n        }\n      }, content));\n    }\n  }]);\n\n  return CalendarPicker;\n}(Component);\n\nCalendarPicker.defaultProps = {\n  initialDate: moment(),\n  scaleFactor: 375,\n  enableSwipe: true,\n  onDateChange: function onDateChange() {\n    console.log('onDateChange() not provided');\n  },\n  enableDateChange: true,\n  headingLevel: 1,\n  sundayColor: '#FFFFFF',\n  dayOfWeekStyles: {},\n  customDatesStyles: [],\n  customDatesStylesPriority: 'dayOfWeek',\n  previousTitle: 'Previous',\n  nextTitle: 'Next',\n  selectMonthTitle: 'Select Month',\n  selectYearTitle: 'Select Year'\n};\nexport { CalendarPicker as default };","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/node_modules/react-native-calendar-picker/CalendarPicker/index.js"],"names":["React","Component","makeStyles","Utils","HeaderControls","Weekdays","DaysGridView","MonthSelector","YearSelector","Swiper","moment","SWIPE_LEFT","SWIPE_RIGHT","_swipeConfig","velocityThreshold","directionalOffsetThreshold","CalendarPicker","props","state","currentMonth","currentYear","currentView","selectedStartDate","selectedEndDate","minDate","maxDate","styles","updateScaledStyles","updateMonthYear","initialDate","updateDayOfWeekStyles","updateDisabledDates","disabledDates","updateMinMaxRanges","minRangeDuration","maxRangeDuration","bind","handleOnPressPrevious","handleOnPressNext","handleOnPressDay","handleOnPressMonth","handleOnPressYear","handleOnSelectMonthYear","onSwipe","resetSelections","prevProps","doStateUpdate","newStyles","width","height","newMonthYear","isSame","selectedDateRanges","customDatesStyles","startFromMonday","dayOfWeekStyles","customDatesStylesPriority","year","month","rangeDurations","setState","scaleFactor","selectedDayColor","selectedDayTextColor","todayBackgroundColor","dayShape","containerWidth","Dimensions","get","containerHeight","parseInt","_disabledDates","Array","isArray","map","date","thisDate","set","hour","minute","second","millisecond","push","valueOf","Function","_minRangeDuration","_maxRangeDuration","mrd","minDuration","maxDuration","day","allowRangeSelection","allowBackwardRangeSelect","enableDateChange","onDateChange","isSameOrAfter","END_DATE","endDate","clone","START_DATE","syncEndDate","currentDate","propsCustomDatesStyles","startOf","customDayOfWeekStyles","dayIndex","currentDayStyle","textStyle","add","previousMonth","handleOnPressFinisher","nextMonth","currentMonthYear","Object","entries","length","error","console","log","onMonthChange","gestureName","weekdays","months","previousComponent","nextComponent","previousTitle","nextTitle","previousTitleStyle","nextTitleStyle","todayTextStyle","selectedDayStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","disabledDatesTextStyle","swipeConfig","restrictMonthNavigation","headingLevel","dayLabelsWrapper","selectMonthTitle","selectYearTitle","showDayStragglers","monthYearHeaderWrapperStyle","content","direction","enableSwipe","calendar","defaultProps","sundayColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Dimensions } from 'react-native';\r\nimport { makeStyles } from './makeStyles';\r\nimport { Utils } from './Utils';\r\nimport HeaderControls from './HeaderControls';\r\nimport Weekdays from './Weekdays';\r\nimport DaysGridView from './DaysGridView';\r\nimport MonthSelector from './MonthSelector';\r\nimport YearSelector from './YearSelector';\r\nimport Swiper from './Swiper';\r\nimport moment from 'moment';\r\n\r\nconst SWIPE_LEFT = 'SWIPE_LEFT';\r\nconst SWIPE_RIGHT = 'SWIPE_RIGHT';\r\n\r\nconst _swipeConfig = {\r\n  velocityThreshold: 0.3,\r\n  directionalOffsetThreshold: 80\r\n};\r\n\r\nexport default class CalendarPicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMonth: null,\r\n      currentYear: null,\r\n      currentView: 'days',\r\n      selectedStartDate: props.selectedStartDate && moment(props.selectedStartDate),\r\n      selectedEndDate: props.selectedEndDate && moment(props.selectedEndDate),\r\n      minDate: props.minDate && moment(props.minDate),\r\n      maxDate: props.maxDate && moment(props.maxDate),\r\n      styles: {},\r\n      ...this.updateScaledStyles(props),\r\n      ...this.updateMonthYear(props.initialDate),\r\n      ...this.updateDayOfWeekStyles(props.initialDate),\r\n      ...this.updateDisabledDates(props.disabledDates),\r\n      ...this.updateMinMaxRanges(props.minRangeDuration, props.maxRangeDuration),\r\n    };\r\n    this.updateScaledStyles = this.updateScaledStyles.bind(this);\r\n    this.updateMonthYear = this.updateMonthYear.bind(this);\r\n    this.updateDisabledDates = this.updateDisabledDates.bind(this);\r\n    this.updateMinMaxRanges = this.updateMinMaxRanges.bind(this);\r\n    this.updateDayOfWeekStyles = this.updateDayOfWeekStyles.bind(this);\r\n    this.handleOnPressPrevious = this.handleOnPressPrevious.bind(this);\r\n    this.handleOnPressNext = this.handleOnPressNext.bind(this);\r\n    this.handleOnPressDay = this.handleOnPressDay.bind(this);\r\n    this.handleOnPressMonth = this.handleOnPressMonth.bind(this);\r\n    this.handleOnPressYear = this.handleOnPressYear.bind(this);\r\n    this.handleOnSelectMonthYear = this.handleOnSelectMonthYear.bind(this);\r\n    this.onSwipe = this.onSwipe.bind(this);\r\n    this.resetSelections = this.resetSelections.bind(this);\r\n  }\r\n\r\n  static defaultProps = {\r\n    initialDate: moment(),\r\n    scaleFactor: 375,\r\n    enableSwipe: true,\r\n    onDateChange: () => {\r\n      console.log('onDateChange() not provided');\r\n    },\r\n    enableDateChange: true,\r\n    headingLevel: 1,\r\n    sundayColor: '#FFFFFF',\r\n    dayOfWeekStyles: {},\r\n    customDatesStyles: [],\r\n    customDatesStylesPriority: 'dayOfWeek',\r\n    previousTitle: 'Previous',\r\n    nextTitle: 'Next',\r\n    selectMonthTitle: 'Select Month',\r\n    selectYearTitle: 'Select Year',\r\n  };\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let doStateUpdate = false;\r\n\r\n    let newStyles = {};\r\n    if (\r\n      prevProps.width !== this.props.width ||\r\n      prevProps.height !== this.props.height\r\n    ) {\r\n      newStyles = this.updateScaledStyles(this.props);\r\n      doStateUpdate = true;\r\n    }\r\n\r\n    let newMonthYear = {};\r\n    if (!moment(prevProps.initialDate).isSame(this.props.initialDate, 'day')) {\r\n      newMonthYear = this.updateMonthYear(this.props.initialDate);\r\n      doStateUpdate = true;\r\n    }\r\n\r\n    let selectedDateRanges = {};\r\n    const { selectedStartDate, selectedEndDate } = this.props;\r\n    if (selectedStartDate !== prevProps.selectedStartDate ||\r\n        selectedEndDate !== prevProps.selectedEndDate\r\n    ) {\r\n      selectedDateRanges = {\r\n        selectedStartDate: selectedStartDate && moment(selectedStartDate),\r\n        selectedEndDate: selectedEndDate && moment(selectedEndDate)\r\n      };\r\n      doStateUpdate = true;\r\n    }\r\n\r\n    let customDatesStyles = {};\r\n    if (this.props.startFromMonday !== prevProps.startFromMonday ||\r\n        this.props.dayOfWeekStyles !== prevProps.dayOfWeekStyles ||\r\n        this.props.customDatesStylesPriority !== prevProps.customDatesStylesPriority ||\r\n        this.props.customDatesStyles !== prevProps.customDatesStyles\r\n    ) {\r\n      customDatesStyles = this.updateDayOfWeekStyles(\r\n        moment({year: this.state.currentYear, month: this.state.currentMonth}),\r\n      );\r\n      doStateUpdate = true;\r\n    }\r\n\r\n    let disabledDates = {};\r\n    if (prevProps.disabledDates !== this.props.disabledDates) {\r\n      disabledDates = this.updateDisabledDates(this.props.disabledDates);\r\n      doStateUpdate = true;\r\n    }\r\n\r\n    let rangeDurations = {};\r\n    if (prevProps.minRangeDuration !== this.props.minRangeDuration ||\r\n        prevProps.maxRangeDuration !== this.props.maxRangeDuration\r\n    ) {\r\n      const {minRangeDuration, maxRangeDuration} = this.props;\r\n      rangeDurations = this.updateMinMaxRanges(minRangeDuration, maxRangeDuration);\r\n      doStateUpdate = true;\r\n    }\r\n\r\n    let minDate = this.props.minDate && moment(this.props.minDate);\r\n    let maxDate = this.props.maxDate && moment(this.props.maxDate);\r\n\r\n    if (doStateUpdate) {\r\n      this.setState({ ...newStyles, ...newMonthYear, ...selectedDateRanges,\r\n        ...customDatesStyles, ...disabledDates, ...rangeDurations,\r\n        minDate, maxDate });\r\n    }\r\n  }\r\n\r\n  updateScaledStyles(props) {\r\n    const {\r\n      scaleFactor,\r\n      selectedDayColor,\r\n      selectedDayTextColor,\r\n      todayBackgroundColor,\r\n      width,\r\n      height,\r\n      dayShape\r\n    } = props;\r\n\r\n    // The styles in makeStyles are intially scaled to this width\r\n    const containerWidth = width ? width : Dimensions.get('window').width;\r\n    const containerHeight = height ? height : Dimensions.get('window').height;\r\n    return {\r\n      styles: makeStyles({\r\n        containerWidth,\r\n        containerHeight,\r\n        scaleFactor,\r\n        selectedDayColor,\r\n        selectedDayTextColor,\r\n        todayBackgroundColor,\r\n        dayShape\r\n      })\r\n    };\r\n  }\r\n\r\n  updateMonthYear(initialDate = this.props.initialDate) {\r\n    return {\r\n      currentMonth: parseInt(moment(initialDate).month()),\r\n      currentYear: parseInt(moment(initialDate).year())\r\n    };\r\n  }\r\n\r\n  updateDisabledDates(_disabledDates = []) {\r\n    let disabledDates = [];\r\n    if (_disabledDates) {\r\n      if (Array.isArray(_disabledDates)) {\r\n        // Convert input date into timestamp\r\n        _disabledDates.map(date => {\r\n          let thisDate = moment(date);\r\n          thisDate.set({ hour: 12, minute: 0, second: 0, millisecond: 0 });\r\n          disabledDates.push(thisDate.valueOf());\r\n        });\r\n      }\r\n      else if (_disabledDates instanceof Function) {\r\n        disabledDates = _disabledDates;\r\n      }\r\n    }\r\n    return { disabledDates };\r\n  }\r\n\r\n  updateMinMaxRanges(_minRangeDuration, _maxRangeDuration) {\r\n    let minRangeDuration = [];\r\n    let maxRangeDuration = [];\r\n\r\n    if (_minRangeDuration) {\r\n      if (Array.isArray(_minRangeDuration)) {\r\n        _minRangeDuration.map(mrd => {\r\n          let thisDate = moment(mrd.date);\r\n          thisDate.set({ hour: 12, minute: 0, second: 0, millisecond: 0 });\r\n          minRangeDuration.push({\r\n            date: thisDate.valueOf(),\r\n            minDuration: mrd.minDuration\r\n          });\r\n        });\r\n      } else {\r\n        minRangeDuration = _minRangeDuration;\r\n      }\r\n    }\r\n\r\n    if (_maxRangeDuration) {\r\n      if (Array.isArray(_maxRangeDuration)) {\r\n        _maxRangeDuration.map(mrd => {\r\n          let thisDate = moment(mrd.date);\r\n          thisDate.set({ hour: 12, minute: 0, second: 0, millisecond: 0 });\r\n          maxRangeDuration.push({\r\n            date: thisDate.valueOf(),\r\n            maxDuration: mrd.maxDuration\r\n          });\r\n        });\r\n      } else {\r\n        maxRangeDuration = _maxRangeDuration;\r\n      }\r\n    }\r\n    return {minRangeDuration, maxRangeDuration};\r\n  }\r\n\r\n  handleOnPressDay(day) {\r\n    const {\r\n      currentYear,\r\n      currentMonth,\r\n      selectedStartDate,\r\n      selectedEndDate\r\n    } = this.state;\r\n\r\n    const {\r\n      allowRangeSelection,\r\n      allowBackwardRangeSelect,\r\n      enableDateChange,\r\n      onDateChange,\r\n    } = this.props;\r\n\r\n    if (!enableDateChange) {\r\n      return;\r\n    }\r\n\r\n    const date = moment({ year: currentYear, month: currentMonth, day, hour: 12 });\r\n\r\n    if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\r\n      if (date.isSameOrAfter(selectedStartDate, 'day')) {\r\n        this.setState({\r\n          selectedEndDate: date\r\n        });\r\n        // Sync start date with parent\r\n        onDateChange(date, Utils.END_DATE);\r\n      }\r\n      else if (allowBackwardRangeSelect) { // date is before selectedStartDate\r\n        // Flip dates so that start is always before end.\r\n        const endDate = selectedStartDate.clone();\r\n        this.setState({\r\n          selectedStartDate: date,\r\n          selectedEndDate: endDate\r\n        }, () => {\r\n          // Sync both start and end dates with parent *after* state update.\r\n          onDateChange(this.state.selectedStartDate, Utils.START_DATE);\r\n          onDateChange(this.state.selectedEndDate, Utils.END_DATE);\r\n        });\r\n      }\r\n    } else {\r\n      const syncEndDate = !!selectedEndDate;\r\n      this.setState({\r\n        selectedStartDate: date,\r\n        selectedEndDate: null\r\n      }, () => {\r\n        // Sync start date with parent *after* state update.\r\n        onDateChange(this.state.selectedStartDate, Utils.START_DATE);\r\n        if (syncEndDate) {\r\n          // sync end date with parent - must be cleared if previously set.\r\n          onDateChange(null, Utils.END_DATE);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  updateDayOfWeekStyles(currentDate) {\r\n    const {\r\n      startFromMonday,\r\n      dayOfWeekStyles,\r\n      customDatesStyles: propsCustomDatesStyles,\r\n      customDatesStylesPriority\r\n    } = this.props;\r\n\r\n    let day = moment(currentDate).startOf('month');\r\n    let customDayOfWeekStyles = [];\r\n    do {\r\n      let dayIndex = day.day();\r\n      if (startFromMonday) {\r\n        dayIndex = dayIndex - 1;\r\n        if (dayIndex < 0) {\r\n          dayIndex = 6; // This is Sunday.\r\n        }\r\n      }\r\n      let currentDayStyle = dayOfWeekStyles[dayIndex];\r\n      if (currentDayStyle) {\r\n        customDayOfWeekStyles.push({\r\n          date: day.clone(),\r\n          textStyle: currentDayStyle,\r\n        });\r\n      }\r\n    } while (day.add(1, 'day').isSame(currentDate, 'month'));\r\n\r\n    let customDatesStyles = [];\r\n    if (customDatesStylesPriority === 'dayOfWeek') {\r\n      customDatesStyles = [...customDayOfWeekStyles, ...propsCustomDatesStyles];\r\n    }\r\n    else {\r\n      customDatesStyles = [...propsCustomDatesStyles, ...customDayOfWeekStyles];\r\n    }\r\n\r\n    return { customDatesStyles };\r\n  }\r\n\r\n  handleOnPressPrevious() {\r\n    let { currentMonth, currentYear } = this.state;\r\n    let previousMonth = currentMonth - 1;\r\n    // if previousMonth is negative it means the current month is January,\r\n    // so we have to go back to previous year and set the current month to December\r\n    if (previousMonth < 0) {\r\n      previousMonth = 11;\r\n      currentYear--;\r\n    }\r\n    this.handleOnPressFinisher({year: currentYear, month: previousMonth});\r\n  }\r\n\r\n  handleOnPressNext() {\r\n    let { currentMonth, currentYear } = this.state;\r\n    let nextMonth = currentMonth + 1;\r\n    // if nextMonth is greater than 11 it means the current month is December,\r\n    // so we have to go forward to the next year and set the current month to January\r\n    if (nextMonth > 11) {\r\n      nextMonth = 0;\r\n      currentYear++;\r\n    }\r\n    this.handleOnPressFinisher({year: currentYear, month: nextMonth});\r\n  }\r\n\r\n  handleOnPressFinisher({year, month}) {\r\n    let dayOfWeekStyles = {};\r\n    let currentMonthYear = moment({year, month});\r\n    try {\r\n      if (Object.entries(this.props.dayOfWeekStyles).length) {\r\n        dayOfWeekStyles = this.updateDayOfWeekStyles(currentMonthYear);\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log('dayOfWeekStyles error');\r\n    }\r\n\r\n    this.setState({\r\n      ...dayOfWeekStyles,\r\n      currentMonth: parseInt(month),\r\n      currentYear: parseInt(year)\r\n    });\r\n\r\n    this.props.onMonthChange && this.props.onMonthChange(currentMonthYear);\r\n  }\r\n\r\n  handleOnPressYear() {\r\n    this.setState({\r\n      currentView: 'years'\r\n    });\r\n  }\r\n\r\n  handleOnPressMonth() {\r\n    this.setState({\r\n      currentView: 'months'\r\n    });\r\n  }\r\n\r\n  handleOnSelectMonthYear({month, year}) {\r\n    this.setState({\r\n      currentYear: year,\r\n      currentMonth: month,\r\n      currentView: 'days'\r\n    });\r\n  }\r\n\r\n  onSwipe(gestureName) {\r\n    if (typeof this.props.onSwipe === 'function') {\r\n      this.props.onSwipe(gestureName);\r\n      return;\r\n    }\r\n    switch (gestureName) {\r\n    case SWIPE_LEFT:\r\n      this.handleOnPressNext();\r\n      break;\r\n    case SWIPE_RIGHT:\r\n      this.handleOnPressPrevious();\r\n      break;\r\n    }\r\n  }\r\n\r\n  resetSelections() {\r\n    this.setState({\r\n      selectedStartDate: null,\r\n      selectedEndDate: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentMonth,\r\n      currentYear,\r\n      minDate,\r\n      maxDate,\r\n      minRangeDuration,\r\n      maxRangeDuration,\r\n      selectedStartDate,\r\n      selectedEndDate,\r\n      disabledDates,\r\n      styles,\r\n      customDatesStyles,\r\n    } = this.state;\r\n\r\n    const {\r\n      allowRangeSelection,\r\n      allowBackwardRangeSelect,\r\n      startFromMonday,\r\n      initialDate,\r\n      weekdays,\r\n      months,\r\n      previousComponent,\r\n      nextComponent,\r\n      previousTitle,\r\n      nextTitle,\r\n      previousTitleStyle,\r\n      nextTitleStyle,\r\n      textStyle,\r\n      todayTextStyle,\r\n      selectedDayStyle,\r\n      selectedRangeStartStyle,\r\n      selectedRangeStyle,\r\n      selectedRangeEndStyle,\r\n      disabledDatesTextStyle,\r\n      swipeConfig,\r\n      enableDateChange,\r\n      restrictMonthNavigation,\r\n      headingLevel,\r\n      dayLabelsWrapper,\r\n      dayOfWeekStyles,\r\n      selectMonthTitle,\r\n      selectYearTitle,\r\n      showDayStragglers,\r\n      monthYearHeaderWrapperStyle,\r\n    } = this.props;\r\n\r\n    let content;\r\n    switch (this.state.currentView) {\r\n    case 'months':\r\n      content = (\r\n        <MonthSelector\r\n          styles={styles}\r\n          textStyle={textStyle}\r\n          title={selectMonthTitle}\r\n          currentYear={currentYear}\r\n          months={months}\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          onSelectMonth={this.handleOnSelectMonthYear}\r\n          headingLevel={headingLevel}\r\n        />\r\n      );\r\n      break;\r\n    case 'years':\r\n      content = (\r\n        <YearSelector\r\n          styles={styles}\r\n          textStyle={textStyle}\r\n          title={selectYearTitle}\r\n          initialDate={moment(initialDate)}\r\n          currentMonth={currentMonth}\r\n          currentYear={currentYear}\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          restrictNavigation={restrictMonthNavigation}\r\n          previousComponent={previousComponent}\r\n          nextComponent={nextComponent}\r\n          previousTitle={previousTitle}\r\n          nextTitle={nextTitle}\r\n          previousTitleStyle={previousTitleStyle}\r\n          nextTitleStyle={nextTitleStyle}\r\n          onSelectYear={this.handleOnSelectMonthYear}\r\n          headingLevel={headingLevel}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      content = (\r\n        <View>\r\n          <HeaderControls\r\n            styles={styles}\r\n            currentMonth={currentMonth}\r\n            currentYear={currentYear}\r\n            initialDate={moment(initialDate)}\r\n            onPressPrevious={this.handleOnPressPrevious}\r\n            onPressNext={this.handleOnPressNext}\r\n            onPressMonth={this.handleOnPressMonth}\r\n            onPressYear={this.handleOnPressYear}\r\n            months={months}\r\n            previousComponent={previousComponent}\r\n            nextComponent={nextComponent}\r\n            previousTitle={previousTitle}\r\n            nextTitle={nextTitle}\r\n            previousTitleStyle={previousTitleStyle}\r\n            nextTitleStyle={nextTitleStyle}\r\n            textStyle={textStyle}\r\n            restrictMonthNavigation={restrictMonthNavigation}\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            headingLevel={headingLevel}\r\n            monthYearHeaderWrapperStyle={monthYearHeaderWrapperStyle}\r\n          />\r\n          <Weekdays\r\n            styles={styles}\r\n            startFromMonday={startFromMonday}\r\n            weekdays={weekdays}\r\n            textStyle={textStyle}\r\n            dayLabelsWrapper={dayLabelsWrapper}\r\n            dayOfWeekStyles={dayOfWeekStyles}\r\n          />\r\n          <DaysGridView\r\n            enableDateChange={enableDateChange}\r\n            month={currentMonth}\r\n            year={currentYear}\r\n            styles={styles}\r\n            onPressDay={this.handleOnPressDay}\r\n            disabledDates={disabledDates}\r\n            disabledDatesTextStyle={disabledDatesTextStyle}\r\n            minRangeDuration={minRangeDuration}\r\n            maxRangeDuration={maxRangeDuration}\r\n            startFromMonday={startFromMonday}\r\n            allowRangeSelection={allowRangeSelection}\r\n            allowBackwardRangeSelect={allowBackwardRangeSelect}\r\n            selectedStartDate={selectedStartDate}\r\n            selectedEndDate={selectedEndDate}\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            showDayStragglers={showDayStragglers}\r\n            textStyle={textStyle}\r\n            todayTextStyle={todayTextStyle}\r\n            selectedDayStyle={selectedDayStyle}\r\n            selectedRangeStartStyle={selectedRangeStartStyle}\r\n            selectedRangeStyle={selectedRangeStyle}\r\n            selectedRangeEndStyle={selectedRangeEndStyle}\r\n            customDatesStyles={customDatesStyles}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Swiper\r\n        onSwipe={direction => this.props.enableSwipe && this.onSwipe(direction)}\r\n        config={{ ..._swipeConfig, ...swipeConfig }}\r\n      >\r\n        <View styles={styles.calendar}>\r\n          { content }\r\n        </View>\r\n      </Swiper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}