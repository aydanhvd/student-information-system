{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\student-information-system\\\\student-information-system\\\\node_modules\\\\react-native-calendar-picker\\\\CalendarPicker\\\\Day.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nexport default function Day(props) {\n  var day = props.day,\n      month = props.month,\n      year = props.year,\n      styles = props.styles,\n      customDatesStyles = props.customDatesStyles,\n      onPressDay = props.onPressDay,\n      selectedStartDate = props.selectedStartDate,\n      selectedEndDate = props.selectedEndDate,\n      allowRangeSelection = props.allowRangeSelection,\n      allowBackwardRangeSelect = props.allowBackwardRangeSelect,\n      selectedDayStyle = props.selectedDayStyle,\n      selectedRangeStartStyle = props.selectedRangeStartStyle,\n      selectedRangeStyle = props.selectedRangeStyle,\n      selectedRangeEndStyle = props.selectedRangeEndStyle,\n      textStyle = props.textStyle,\n      todayTextStyle = props.todayTextStyle,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledDates = props.disabledDates,\n      disabledDatesTextStyle = props.disabledDatesTextStyle,\n      minRangeDuration = props.minRangeDuration,\n      maxRangeDuration = props.maxRangeDuration,\n      enableDateChange = props.enableDateChange;\n  var thisDay = moment({\n    year: year,\n    month: month,\n    day: day,\n    hour: 12\n  });\n  var today = moment();\n  var dateOutOfRange;\n  var daySelectedStyle = styles.dayButton;\n  var selectedDayColorStyle = {};\n  var propSelectedDayStyle;\n  var dateIsBeforeMin = false;\n  var dateIsAfterMax = false;\n  var dateIsDisabled = false;\n  var dateRangeLessThanMin = false;\n  var dateRangeGreaterThanMax = false;\n  var customContainerStyle, customDateStyle, customTextStyle;\n\n  if (maxDate) {\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\n  }\n\n  if (minDate) {\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\n  }\n\n  if (disabledDates) {\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\n      dateIsDisabled = true;\n    } else if (disabledDates instanceof Function) {\n      dateIsDisabled = disabledDates(thisDay);\n    }\n  }\n\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\n    var daysDiff = thisDay.diff(selectedStartDate, 'days');\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\n\n    if (maxRangeDuration) {\n      if (Array.isArray(maxRangeDuration)) {\n        var maxRangeEntry = maxRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\n          dateRangeGreaterThanMax = true;\n        }\n      } else if (daysDiff > maxRangeDuration) {\n        dateRangeGreaterThanMax = true;\n      }\n    }\n\n    if (minRangeDuration) {\n      if (Array.isArray(minRangeDuration)) {\n        var minRangeEntry = minRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration && daysDiff !== 0) {\n          dateRangeLessThanMin = true;\n        }\n      } else if (daysDiff < minRangeDuration && daysDiff !== 0) {\n        dateRangeLessThanMin = true;\n      }\n    }\n\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\n      dateRangeLessThanMin = true;\n    }\n  }\n\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\n\n  if (!dateOutOfRange) {\n    var isToday = thisDay.isSame(today, 'day');\n\n    if (isToday) {\n      daySelectedStyle = styles.selectedToday;\n      selectedDayColorStyle = todayTextStyle || styles.selectedDayLabel;\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(customDatesStyles), _step; !(_step = _iterator()).done;) {\n      var cds = _step.value;\n\n      if (thisDay.isSame(moment(cds.date), 'day')) {\n        customContainerStyle = cds.containerStyle;\n        customDateStyle = cds.style;\n        customTextStyle = cds.textStyle;\n\n        if (isToday && customDateStyle) {\n          daySelectedStyle = [daySelectedStyle, customDateStyle];\n        }\n\n        break;\n      }\n    }\n\n    var isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\n    var isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\n\n    if (!allowRangeSelection && selectedStartDate && isThisDaySameAsSelectedStart) {\n      daySelectedStyle = styles.selectedDay;\n      selectedDayColorStyle = [styles.selectedDayLabel, isToday && todayTextStyle];\n      propSelectedDayStyle = selectedDayStyle || styles.selectedDayBackground;\n    }\n\n    if (allowRangeSelection) {\n      if (selectedStartDate && selectedEndDate) {\n        if (isThisDaySameAsSelectedStart) {\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n\n        if (isThisDaySameAsSelectedEnd) {\n          daySelectedStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n\n        if (isThisDaySameAsSelectedEnd && isThisDaySameAsSelectedStart && selectedEndDate.isSame(selectedStartDate, 'day')) {\n          daySelectedStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day')) {\n          daySelectedStyle = [styles.inRangeDay, selectedRangeStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n      }\n\n      if (selectedStartDate && !selectedEndDate && isThisDaySameAsSelectedStart) {\n        daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n        selectedDayColorStyle = styles.selectedDayLabel;\n      }\n    }\n\n    return React.createElement(View, {\n      style: [styles.dayWrapper, customContainerStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      disabled: !enableDateChange,\n      style: [customDateStyle, daySelectedStyle, propSelectedDayStyle],\n      onPress: function onPress() {\n        return onPressDay(day);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.dayLabel, textStyle, customTextStyle, selectedDayColorStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, day)));\n  } else {\n    return React.createElement(View, {\n      style: styles.dayWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [textStyle, styles.disabledText, disabledDatesTextStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, day));\n  }\n}\nDay.defaultProps = {\n  customDatesStyles: []\n};\nDay.propTypes = {\n  styles: PropTypes.shape({}),\n  day: PropTypes.number,\n  onPressDay: PropTypes.func,\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number])\n};","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/node_modules/react-native-calendar-picker/CalendarPicker/Day.js"],"names":["React","PropTypes","moment","Day","props","day","month","year","styles","customDatesStyles","onPressDay","selectedStartDate","selectedEndDate","allowRangeSelection","allowBackwardRangeSelect","selectedDayStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","textStyle","todayTextStyle","minDate","maxDate","disabledDates","disabledDatesTextStyle","minRangeDuration","maxRangeDuration","enableDateChange","thisDay","hour","today","dateOutOfRange","daySelectedStyle","dayButton","selectedDayColorStyle","propSelectedDayStyle","dateIsBeforeMin","dateIsAfterMax","dateIsDisabled","dateRangeLessThanMin","dateRangeGreaterThanMax","customContainerStyle","customDateStyle","customTextStyle","isAfter","isBefore","Array","isArray","indexOf","valueOf","Function","daysDiff","diff","Math","abs","maxRangeEntry","find","mrd","isSame","date","maxDuration","minRangeEntry","minDuration","isToday","selectedToday","selectedDayLabel","cds","containerStyle","style","isThisDaySameAsSelectedStart","isThisDaySameAsSelectedEnd","selectedDay","selectedDayBackground","startDayWrapper","endDayWrapper","isBetween","inRangeDay","dayWrapper","dayLabel","disabledText","defaultProps","propTypes","shape","number","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nexport default function Day(props) {\r\n  const {\r\n    day,\r\n    month,\r\n    year,\r\n    styles,\r\n    customDatesStyles,\r\n    onPressDay,\r\n    selectedStartDate,\r\n    selectedEndDate,\r\n    allowRangeSelection,\r\n    allowBackwardRangeSelect,\r\n    selectedDayStyle,\r\n    selectedRangeStartStyle,\r\n    selectedRangeStyle,\r\n    selectedRangeEndStyle,\r\n    textStyle,\r\n    todayTextStyle,\r\n    minDate,\r\n    maxDate,\r\n    disabledDates,\r\n    disabledDatesTextStyle,\r\n    minRangeDuration,\r\n    maxRangeDuration,\r\n    enableDateChange\r\n  } = props;\r\n\r\n  const thisDay = moment({year, month, day, hour: 12 });\r\n  const today = moment();\r\n\r\n  let dateOutOfRange;\r\n  let daySelectedStyle = styles.dayButton; // may be overridden depending on state\r\n  let selectedDayColorStyle = {};\r\n  let propSelectedDayStyle;\r\n  let dateIsBeforeMin = false;\r\n  let dateIsAfterMax = false;\r\n  let dateIsDisabled = false;\r\n  let dateRangeLessThanMin = false;\r\n  let dateRangeGreaterThanMax = false;\r\n  let customContainerStyle, customDateStyle, customTextStyle;\r\n\r\n  // First let's check if date is out of range\r\n  // Check whether props maxDate / minDate are defined. If not supplied,\r\n  // don't restrict dates.\r\n  if (maxDate) {\r\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\r\n  }\r\n  if (minDate) {\r\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\r\n  }\r\n\r\n  if (disabledDates) {\r\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\r\n      dateIsDisabled = true;\r\n    }\r\n    else if (disabledDates instanceof Function) {\r\n      dateIsDisabled = disabledDates(thisDay);\r\n    }\r\n  }\r\n\r\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\r\n    let daysDiff = thisDay.diff(selectedStartDate, 'days'); // may be + or -\r\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\r\n\r\n    if (maxRangeDuration) {\r\n      if (Array.isArray(maxRangeDuration)) {\r\n        let maxRangeEntry = maxRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\r\n          dateRangeGreaterThanMax = true;\r\n        }\r\n      } else if(daysDiff > maxRangeDuration) {\r\n        dateRangeGreaterThanMax = true;\r\n      }\r\n    }\r\n\r\n    if (minRangeDuration) {\r\n      if (Array.isArray(minRangeDuration)) {\r\n        let minRangeEntry = minRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration && daysDiff !== 0) {\r\n          dateRangeLessThanMin = true;\r\n        }\r\n      } else if(daysDiff < minRangeDuration && daysDiff !== 0) {\r\n        dateRangeLessThanMin = true;\r\n      }\r\n    }\r\n\r\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\r\n      dateRangeLessThanMin = true;\r\n    }\r\n  }\r\n\r\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\r\n\r\n  // If date is in range let's apply styles\r\n  if (!dateOutOfRange) {\r\n    // set today's style\r\n    let isToday = thisDay.isSame(today, 'day');\r\n    if (isToday) {\r\n      daySelectedStyle = styles.selectedToday;\r\n      // todayTextStyle prop overrides selectedDayTextColor (created via makeStyles)\r\n      selectedDayColorStyle = todayTextStyle || styles.selectedDayLabel;\r\n    }\r\n\r\n    for (let cds of customDatesStyles) {\r\n      if (thisDay.isSame(moment(cds.date), 'day')) {\r\n        customContainerStyle = cds.containerStyle;\r\n        customDateStyle = cds.style;\r\n        customTextStyle = cds.textStyle;\r\n        if (isToday && customDateStyle) {\r\n          // Custom date style overrides 'today' style. It may be reset below\r\n          // by date selection styling.\r\n          daySelectedStyle = [daySelectedStyle, customDateStyle];\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    let isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\r\n    let isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\r\n\r\n    // set selected day style\r\n    if (!allowRangeSelection &&\r\n        selectedStartDate &&\r\n        isThisDaySameAsSelectedStart) {\r\n      daySelectedStyle = styles.selectedDay;\r\n      selectedDayColorStyle = [styles.selectedDayLabel, isToday && todayTextStyle];\r\n      // selectedDayStyle prop overrides selectedDayColor (created via makeStyles)\r\n      propSelectedDayStyle = selectedDayStyle || styles.selectedDayBackground;\r\n    }\r\n\r\n    // Set selected ranges styles\r\n    if (allowRangeSelection) {\r\n      if (selectedStartDate && selectedEndDate) {\r\n        // Apply style for start date\r\n        if (isThisDaySameAsSelectedStart) {\r\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n        // Apply style for end date\r\n        if (isThisDaySameAsSelectedEnd) {\r\n          daySelectedStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n        // Apply style if start date is the same as end date\r\n        if (isThisDaySameAsSelectedEnd &&\r\n            isThisDaySameAsSelectedStart &&\r\n            selectedEndDate.isSame(selectedStartDate, 'day')) {\r\n          daySelectedStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n        // Apply style if this day is in range\r\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day')) {\r\n          daySelectedStyle = [styles.inRangeDay, selectedRangeStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n      }\r\n      // Apply style if start date has been selected but end date has not\r\n      if (selectedStartDate &&\r\n          !selectedEndDate &&\r\n          isThisDaySameAsSelectedStart) {\r\n        daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n        selectedDayColorStyle = styles.selectedDayLabel;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <View style={[styles.dayWrapper, customContainerStyle]}>\r\n        <TouchableOpacity\r\n          disabled={!enableDateChange}\r\n          style={[customDateStyle, daySelectedStyle, propSelectedDayStyle ]}\r\n          onPress={() => onPressDay(day) }>\r\n          <Text style={[styles.dayLabel, textStyle, customTextStyle, selectedDayColorStyle]}>\r\n            { day }\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  else {  // dateOutOfRange = true\r\n    return (\r\n      <View style={styles.dayWrapper}>\r\n        <Text style={[textStyle, styles.disabledText, disabledDatesTextStyle]}>\r\n          { day }\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nDay.defaultProps = {\r\n  customDatesStyles: [],\r\n};\r\n\r\nDay.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  day: PropTypes.number,\r\n  onPressDay: PropTypes.func,\r\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}