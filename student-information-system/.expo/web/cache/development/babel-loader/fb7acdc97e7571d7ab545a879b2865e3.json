{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Permissions from 'expo-permissions';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function askForCameraPermissions() {\n  var _await$Permissions$as, _status, _await$Permissions$ge, status;\n\n  return _regeneratorRuntime.async(function askForCameraPermissions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n        case 4:\n          _await$Permissions$as = _context.sent;\n          _status = _await$Permissions$as.status;\n          console.log({\n            status: _status\n          });\n\n          if (!({\n            status: _status\n          } !== 'granted')) {\n            _context.next = 10;\n            break;\n          }\n\n          Alert.alert('Fail', 'Sorry, we need camera roll permissions to make this work!');\n          return _context.abrupt(\"return\", false);\n\n        case 10:\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.CAMERA));\n\n        case 12:\n          _await$Permissions$ge = _context.sent;\n          status = _await$Permissions$ge.status;\n\n          if (!({\n            status: status\n          } === 'granted')) {\n            _context.next = 18;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 18:\n          Alert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [{\n            text: 'Okay'\n          }]);\n          return _context.abrupt(\"return\", false);\n\n        case 20:\n          _context.next = 25;\n          break;\n\n        case 22:\n          _context.prev = 22;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('askForCameraPermissions err', _context.t0);\n\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 22]], Promise);\n}","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/utils/askForCameraPermissions.js"],"names":["Permissions","askForCameraPermissions","Platform","OS","askAsync","CAMERA_ROLL","status","console","log","Alert","alert","getAsync","CAMERA","text"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;;;AAGA,OAAO,SAAeC,uBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEDC,QAAQ,CAACC,EAAT,KAAgB,KAFf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAIqBH,WAAW,CAACI,QAAZ,CAAqBJ,WAAW,CAACK,WAAjC,CAJrB;;AAAA;AAAA;AAIIC,UAAAA,OAJJ,yBAIIA,MAJJ;AAKJC,UAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,YAAAA,MAAM,EAANA;AAAD,WAAZ;;AALI,gBAMA;AAACA,YAAAA,MAAM,EAANA;AAAD,gBAAa,SANb;AAAA;AAAA;AAAA;;AAOHG,UAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAoB,2DAApB;AAPG,2CAQI,KARJ;;AAAA;AAAA;AAAA,2CAaoBV,WAAW,CAACW,QAAZ,CAAqBX,WAAW,CAACY,MAAjC,CAbpB;;AAAA;AAAA;AAaGN,UAAAA,MAbH,yBAaGA,MAbH;;AAAA,gBAcD;AAACA,YAAAA,MAAM,EAANA;AAAD,gBAAa,SAdZ;AAAA;AAAA;AAAA;;AAAA,2CAeG,IAfH;;AAAA;AAiBJG,UAAAA,KAAK,CAACC,KAAN,CAAY,2BAAZ,EAAyC,uDAAzC,EAAkG,CACjG;AAAEG,YAAAA,IAAI,EAAE;AAAR,WADiG,CAAlG;AAjBI,2CAoBG,KApBH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuBLN,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAvBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as Permissions from 'expo-permissions';\r\nimport { Platform, Alert } from 'react-native';\r\n\r\nexport async function askForCameraPermissions() {\r\n\ttry {\r\n\t\tif (Platform.OS === 'ios') {\r\n\t\t\t//for IOS we need also CAMERA_ROLL\r\n\t\t\tconst { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\t\t\tconsole.log({status})\r\n\t\t\tif ({status} !== 'granted') {\r\n\t\t\t\tAlert.alert('Fail', 'Sorry, we need camera roll permissions to make this work!');\r\n\t\t\t\treturn false;\r\n\t\t\t\t//todo handele error\r\n\t\t\t}\r\n\t\t}\r\n\t\t//for both Android and IOS\r\n\t\tconst { status } = await Permissions.getAsync(Permissions.CAMERA);\r\n\t\tif ({status} === 'granted') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tAlert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [\r\n\t\t\t\t{ text: 'Okay' }\r\n\t\t\t]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log('askForCameraPermissions err', err);\r\n\t\t//todo handle error\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}