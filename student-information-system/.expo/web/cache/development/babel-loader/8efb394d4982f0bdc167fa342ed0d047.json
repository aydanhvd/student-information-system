{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fbApp from \"../utils/FireBaseInit\";\nimport { selectUser } from \"./auth\";\nvar SET_FEEDS = 'SET_FEEDS';\nvar SET_POSTS = 'SET_POSTS';\nvar SET_ACTIVE_POSTS_ID = 'SET_ACTIVE_POSTS_ID';\nexport var MODULE_NAME = 'groups';\nexport var selectFeeds = function selectFeeds(state) {\n  return state[MODULE_NAME].feeds;\n};\nexport var selectPosts = function selectPosts(state) {\n  return state[MODULE_NAME].posts;\n};\nexport var selectActivePosts = function selectActivePosts(state) {\n  return state[MODULE_NAME].activePostsID;\n};\nvar initialState = {\n  feeds: [],\n  posts: [],\n  activePostsID: '-MAWDvacjOM3q9QSesbc'\n};\nexport function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case SET_FEEDS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        feeds: payload\n      });\n\n    case SET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: payload\n      });\n\n    case SET_ACTIVE_POSTS_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activePostsID: payload\n      });\n\n    default:\n      return state;\n  }\n}\nexport var setFeeds = function setFeeds(payload) {\n  return {\n    type: SET_FEEDS,\n    payload: payload\n  };\n};\nexport var setPosts = function setPosts(payload) {\n  return {\n    type: SET_POSTS,\n    payload: payload\n  };\n};\nexport var setActivePosts = function setActivePosts(payload) {\n  return {\n    type: SET_ACTIVE_POSTS_ID,\n    payload: payload\n  };\n};\nexport var getAndListenFeeds = function getAndListenFeeds() {\n  return function (dispatch) {\n    try {\n      var reference = fbApp.db.ref('feeds');\n      reference.on('value', function (snapshot) {\n        if (snapshot.exists()) {\n          var feedTitlesObj = snapshot.val();\n          var feedTitlesArr = Object.keys(feedTitlesObj).map(function (key) {\n            return _objectSpread({\n              ID: key\n            }, feedTitlesObj[key]);\n          });\n          dispatch(setFeeds(feedTitlesArr));\n        }\n      }, function (err) {\n        console.log('getAndListenFeeds err', err);\n      });\n      return function () {\n        return reference.off();\n      };\n    } catch (err) {\n      console.log('getAndListenFeeds', err);\n    }\n  };\n};\nexport var getAndListenPosts = function getAndListenPosts(feedID) {\n  return function (dispatch) {\n    try {\n      var reference = fbApp.db.ref(\"posts/\" + feedID);\n      reference.on('value', function (snapshot) {\n        if (snapshot.exists()) {\n          var postsObj = snapshot.val();\n          var postsArr = Object.keys(postsObj).map(function (key) {\n            return _objectSpread({\n              ID: key\n            }, postsObj[key]);\n          });\n          dispatch(setPosts(postsArr));\n        }\n      }, function (err) {\n        console.log('getAndListeToPosts part 1 err', err);\n      });\n      return function () {\n        return reference.off();\n      };\n    } catch (err) {\n      console.log('getAndListeToPosts err', err);\n    }\n  };\n};\nexport var shareNewPost = function shareNewPost(feedID, text) {\n  return function (dispatch, getState) {\n    try {\n      var user = selectUser(getState());\n      var reference = fbApp.db.ref(\"posts/\" + feedID);\n      var newPost = {\n        auther: user.name,\n        userName: user.userName,\n        autherID: user.userID,\n        likes: 0,\n        time: fbApp.root.database.ServerValue.TIMESTAMP,\n        text: text\n      };\n      reference.push().set(newPost, function (err) {\n        if (err) {\n          console.log('shareNewPost err', err);\n        }\n      });\n    } catch (err) {\n      console.log('sharePost err', err);\n    }\n  };\n};","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/redux/posts.js"],"names":["fbApp","selectUser","SET_FEEDS","SET_POSTS","SET_ACTIVE_POSTS_ID","MODULE_NAME","selectFeeds","state","feeds","selectPosts","posts","selectActivePosts","activePostsID","initialState","reducer","type","payload","setFeeds","setPosts","setActivePosts","getAndListenFeeds","dispatch","reference","db","ref","on","snapshot","exists","feedTitlesObj","val","feedTitlesArr","Object","keys","map","key","ID","err","console","log","off","getAndListenPosts","feedID","postsObj","postsArr","shareNewPost","text","getState","user","newPost","auther","name","userName","autherID","userID","likes","time","root","database","ServerValue","TIMESTAMP","push","set"],"mappings":"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","sourcesContent":["import fbApp from '../utils/FireBaseInit';\r\nimport { selectUser } from './auth';\r\n//Action Types\r\nconst SET_FEEDS = 'SET_FEEDS';\r\nconst SET_POSTS = 'SET_POSTS';\r\nconst SET_ACTIVE_POSTS_ID = 'SET_ACTIVE_POSTS_ID';\r\n\r\n//Selectors\r\nexport const MODULE_NAME = 'groups';\r\nexport const selectFeeds = (state) => state[MODULE_NAME].feeds;\r\nexport const selectPosts = (state) => state[MODULE_NAME].posts;\r\nexport const selectActivePosts = (state) => state[MODULE_NAME].activePostsID;\r\n\r\n//Reducer\r\nconst initialState = {\r\n\tfeeds: [],\r\n\tposts: [],\r\n\tactivePostsID: '-MAWDvacjOM3q9QSesbc' //TODO not the best way fix this\r\n};\r\n\r\nexport function reducer(state = initialState, { type, payload }) {\r\n\tswitch (type) {\r\n\t\tcase SET_FEEDS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfeeds: payload\r\n\t\t\t};\r\n\t\tcase SET_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: payload\r\n\t\t\t};\r\n\t\tcase SET_ACTIVE_POSTS_ID:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactivePostsID: payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n//ActionCreators\r\n\r\nexport const setFeeds = (payload) => ({\r\n\ttype: SET_FEEDS,\r\n\tpayload\r\n});\r\nexport const setPosts = (payload) => ({\r\n\ttype: SET_POSTS,\r\n\tpayload\r\n});\r\nexport const setActivePosts = (payload) => ({\r\n\ttype: SET_ACTIVE_POSTS_ID,\r\n\tpayload\r\n});\r\n\r\n//Middlewares\r\n\r\n//a middleware for getting feeds(hedar of home screen)\r\nexport const getAndListenFeeds = () => (dispatch) => {\r\n\ttry {\r\n\t\tconst reference = fbApp.db.ref('feeds');\r\n\t\treference.on(\r\n\t\t\t'value',\r\n\t\t\t(snapshot) => {\r\n\t\t\t\tif (snapshot.exists()) {\r\n\t\t\t\t\tconst feedTitlesObj = snapshot.val();\r\n\t\t\t\t\tconst feedTitlesArr = Object.keys(feedTitlesObj).map((key) => ({\r\n\t\t\t\t\t\tID: key, //use uppercase for ids\r\n\t\t\t\t\t\t...feedTitlesObj[key]\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tdispatch(setFeeds(feedTitlesArr));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\tconsole.log('getAndListenFeeds err', err);\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn () => reference.off();\r\n\t} catch (err) {\r\n\t\tconsole.log('getAndListenFeeds', err);\r\n\t\t//TODO handle errors\r\n\t}\r\n};\r\n//a middleware for getting posts(posts in home screen users share)\r\nexport const getAndListenPosts = (feedID) => (dispatch) => {\r\n\ttry {\r\n\t\tconst reference = fbApp.db.ref(`posts/${feedID}`);\r\n\t\treference.on(\r\n\t\t\t'value',\r\n\t\t\t(snapshot) => {\r\n\t\t\t\tif (snapshot.exists()) {\r\n\t\t\t\t\tconst postsObj = snapshot.val();\r\n\t\t\t\t\tconst postsArr = Object.keys(postsObj).map((key) => ({\r\n\t\t\t\t\t\tID: key, //use upperase for ids\r\n\t\t\t\t\t\t...postsObj[key]\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tdispatch(setPosts(postsArr));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\tconsole.log('getAndListeToPosts part 1 err', err);\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn () => reference.off();\r\n\t} catch (err) {\r\n\t\tconsole.log('getAndListeToPosts err', err);\r\n\t\t//TODO handle errors\r\n\t}\r\n};\r\n\r\n// a middleware for shareing posts in home screen\r\nexport const shareNewPost = (feedID, text) => (dispatch, getState) => {\r\n\ttry {\r\n\t\tconst user = selectUser(getState());\r\n\t\tconst reference = fbApp.db.ref(`posts/${feedID}`);\r\n\t\t//const newPostID = reference.push().key;//use uppercase for IDs\r\n\t\tconst newPost = {\r\n\t\t\tauther: user.name,\r\n\t\t\tuserName: user.userName,\r\n\t\t\tautherID: user.userID, //use uppercase for IDS\r\n\t\t\tlikes: 0,\r\n\t\t\ttime: fbApp.root.database.ServerValue.TIMESTAMP,\r\n\t\t\ttext\r\n\t\t};\r\n\t\treference.push().set(newPost, (err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log('shareNewPost err', err);\r\n\t\t\t\t//TODO handle errors\r\n\t\t\t}\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.log('sharePost err', err);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}