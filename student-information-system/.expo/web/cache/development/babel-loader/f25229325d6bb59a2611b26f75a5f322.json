{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\projects\\\\student-information-system\\\\student-information-system\\\\components\\\\HomeScreenHeader.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { COLORS } from \"../styles/colors\";\nimport { CustomText } from \"./CustomText\";\nimport { setActivePosts, selectActivePosts, selectPosts } from \"../redux/posts\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activePostID: selectActivePosts(state)\n  };\n};\n\nexport var HomeScreenHeader = connect(mapStateToProps, {\n  setActivePosts: setActivePosts\n})(function (_ref) {\n  var feeds = _ref.feeds,\n      setActivePosts = _ref.setActivePosts,\n      activePostID = _ref.activePostID;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    contentContainerStyle: styles.container,\n    data: feeds,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        style: styles.btn,\n        onPress: function onPress() {\n          setActivePosts(item.ID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(CustomText, {\n        style: _objectSpread(_objectSpread({}, styles.btnText), {}, {\n          color: activePostID === item.ID ? COLORS.acsentColor : COLORS.acsentLight\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 8\n        }\n      }, item.feed), activePostID === item.ID && React.createElement(View, {\n        style: styles.indicator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.backgroundLight,\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  btnText: {\n    fontSize: 18,\n    marginHorizontal: 17\n  },\n  indicator: {\n    position: 'absolute',\n    bottom: -20,\n    marginTop: 10,\n    backgroundColor: COLORS.acsentColor,\n    width: 50,\n    height: 3,\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/components/HomeScreenHeader.js"],"names":["React","useState","useEffect","connect","COLORS","CustomText","setActivePosts","selectActivePosts","selectPosts","mapStateToProps","state","activePostID","HomeScreenHeader","feeds","styles","container","item","btn","ID","btnText","color","acsentColor","acsentLight","feed","indicator","StyleSheet","create","backgroundColor","backgroundLight","height","flexDirection","alignItems","justifyContent","fontSize","marginHorizontal","position","bottom","marginTop","width","alignSelf"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,MAAT;AACA,SAASC,UAAT;AACA,SAASC,cAAT,EAAyBC,iBAAzB,EAA4CC,WAA5C;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACnCC,IAAAA,YAAY,EAAEJ,iBAAiB,CAACG,KAAD;AADI,GAAZ;AAAA,CAAxB;;AAIA,OAAO,IAAME,gBAAgB,GAAGT,OAAO,CAACM,eAAD,EAAkB;AACxDH,EAAAA,cAAc,EAAdA;AADwD,CAAlB,CAAP,CAE7B,gBAA6C;AAAA,MAA1CO,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCP,cAAmC,QAAnCA,cAAmC;AAAA,MAAnBK,YAAmB,QAAnBA,YAAmB;AAC/C,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AACC,IAAA,qBAAqB,EAAED,MAAM,CAACC,SAD/B;AAEC,IAAA,IAAI,EAAEF,KAFP;AAGC,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXG,IAAW,SAAXA,IAAW;AACzB,aACC,oBAAC,gBAAD;AACC,QAAA,KAAK,EAAEF,MAAM,CAACG,GADf;AAEC,QAAA,OAAO,EAAE,mBAAM;AACdX,UAAAA,cAAc,CAACU,IAAI,CAACE,EAAN,CAAd;AACA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMC,oBAAC,UAAD;AACC,QAAA,KAAK,kCACDJ,MAAM,CAACK,OADN;AAEJC,UAAAA,KAAK,EAAET,YAAY,KAAKK,IAAI,CAACE,EAAvB,GAA8Bd,MAAM,CAACiB,WAArC,GAAmDjB,MAAM,CAACkB;AAF5D,UADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMEN,IAAI,CAACO,IANP,CAND,EAcGZ,YAAY,KAAKK,IAAI,CAACE,EAAvB,IAA+B,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdjC,CADD;AAkBA,KAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AA4BA,CA/B+B,CAAzB;AAiCP,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAChCX,EAAAA,SAAS,EAAE;AACVY,IAAAA,eAAe,EAAEvB,MAAM,CAACwB,eADd;AAEVC,IAAAA,MAAM,EAAE,EAFE;AAGVC,IAAAA,aAAa,EAAE,KAHL;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,cAAc,EAAE;AALN,GADqB;AAQhCb,EAAAA,OAAO,EAAE;AACRc,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,gBAAgB,EAAE;AAFV,GARuB;AAYhCV,EAAAA,SAAS,EAAE;AACVW,IAAAA,QAAQ,EAAE,UADA;AAEVC,IAAAA,MAAM,EAAE,CAAC,EAFC;AAGVC,IAAAA,SAAS,EAAE,EAHD;AAIVV,IAAAA,eAAe,EAAEvB,MAAM,CAACiB,WAJd;AAKViB,IAAAA,KAAK,EAAE,EALG;AAMVT,IAAAA,MAAM,EAAE,CANE;AAOVU,IAAAA,SAAS,EAAE;AAPD;AAZqB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { COLORS } from '../styles/colors';\r\nimport { CustomText } from './CustomText';\r\nimport { setActivePosts, selectActivePosts, selectPosts } from '../redux/posts';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tactivePostID: selectActivePosts(state),\r\n});\r\n\r\nexport const HomeScreenHeader = connect(mapStateToProps, {\r\n\tsetActivePosts\r\n})(({ feeds, setActivePosts, activePostID }) => {\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<FlatList\r\n\t\t\t\tcontentContainerStyle={styles.container}\r\n\t\t\t\tdata={feeds} //BTNS SHOULD BE FILTERED ACCORDING TO USER ACSESS\r\n\t\t\t\trenderItem={({ item }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\t\tstyle={styles.btn}\r\n\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\tsetActivePosts(item.ID);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CustomText\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t...styles.btnText,\r\n\t\t\t\t\t\t\t\t\tcolor:(activePostID === item.ID ) ? COLORS.acsentColor : COLORS.acsentLight\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.feed}\r\n\t\t\t\t\t\t\t</CustomText>\r\n\t\t\t\t\t\t\t{(activePostID === item.ID ) && <View style={styles.indicator} />}\r\n\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: COLORS.backgroundLight,\r\n\t\theight: 60,\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\tbtnText: {\r\n\t\tfontSize: 18,\r\n\t\tmarginHorizontal: 17\r\n\t},\r\n\tindicator: {\r\n\t\tposition: 'absolute',\r\n\t\tbottom: -20,\r\n\t\tmarginTop: 10,\r\n\t\tbackgroundColor: COLORS.acsentColor,\r\n\t\twidth: 50,\r\n\t\theight: 3,\r\n\t\talignSelf: 'center'\r\n\t}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}