{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport var imagePickerOptions = Object.freeze({\n  mediaTypes: ImagePicker.MediaTypeOptions.Images,\n  allowsEditing: true,\n  aspect: [1, 1]\n});\nexport function askForCameraPermissions() {\n  var _await$Permissions$as, _status, _await$Permissions$as2, status;\n\n  return _regeneratorRuntime.async(function askForCameraPermissions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n        case 4:\n          _await$Permissions$as = _context.sent;\n          _status = _await$Permissions$as.status;\n\n          if (!(_status !== 'granted')) {\n            _context.next = 9;\n            break;\n          }\n\n          Alert.alert('Fail', 'Sorry, we need camera roll permissions to make this work!');\n          return _context.abrupt(\"return\", false);\n\n        case 9:\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n        case 11:\n          _await$Permissions$as2 = _context.sent;\n          status = _await$Permissions$as2.status;\n\n          if (!(status === 'granted')) {\n            _context.next = 17;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 17:\n          Alert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [{\n            text: 'Okay'\n          }]);\n          return _context.abrupt(\"return\", false);\n\n        case 19:\n          _context.next = 24;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('askForCameraPermissions err', _context.t0);\n\n        case 24:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 21]], Promise);\n}\nexport var selectImage = function selectImage(isCamera) {\n  var permisions, image, _image, canceled, uri;\n\n  return _regeneratorRuntime.async(function selectImage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(askForCameraPermissions());\n\n        case 3:\n          permisions = _context2.sent;\n\n          if (!permisions) {\n            _context2.next = 16;\n            break;\n          }\n\n          if (!isCamera) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync(imagePickerOptions));\n\n        case 8:\n          image = _context2.sent;\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.next = 13;\n          return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync(imagePickerOptions));\n\n        case 13:\n          image = _context2.sent;\n\n        case 14:\n          _image = image, canceled = _image.canceled, uri = _image.uri;\n\n          if (!canceled) {\n            uploadImage(uri);\n          }\n\n        case 16:\n          _context2.next = 21;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('selectImage err', _context2.t0);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 18]], Promise);\n};\nexport function uploadImage(uri) {\n  var response, blob, snap;\n  return _regeneratorRuntime.async(function uploadImage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(uri));\n\n        case 3:\n          response = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(response.blob());\n\n        case 6:\n          blob = _context3.sent;\n          _context3.next = 9;\n          return _regeneratorRuntime.awrap(fbApp.storage.ref(\"image\").put(blob));\n\n        case 9:\n          snap = _context3.sent;\n          console.log(sna);\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n}","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/utils/askForCameraPermissions.js"],"names":["Permissions","ImagePicker","imagePickerOptions","Object","freeze","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","askForCameraPermissions","Platform","OS","askAsync","CAMERA_ROLL","status","Alert","alert","CAMERA","text","console","log","selectImage","isCamera","permisions","launchCameraAsync","image","launchImageLibraryAsync","canceled","uri","uploadImage","fetch","response","blob","fbApp","storage","ref","put","snap","sna"],"mappings":"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","sourcesContent":["import * as Permissions from 'expo-permissions';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Platform, Alert } from 'react-native';\r\n\r\n//presets for images\r\nexport const imagePickerOptions = Object.freeze({\r\n\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n\tallowsEditing: true,\r\n\taspect: [ 1, 1 ]\r\n});\r\n\r\n//a function to handle permissions for camera and camera roll depending on os\r\nexport async function askForCameraPermissions() {\r\n\ttry {\r\n\t\tif (Platform.OS === 'ios') {\r\n\t\t\t//for IOS we need also CAMERA_ROLL\r\n\t\t\tconst { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\t\t\tif (status !== 'granted') {\r\n\t\t\t\tAlert.alert('Fail', 'Sorry, we need camera roll permissions to make this work!');\r\n\t\t\t\treturn false;\r\n\t\t\t\t//todo handele error\r\n\t\t\t}\r\n\t\t}\r\n\t\t//for both Android and IOS\r\n\t\tconst { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n\t\tif (status === 'granted') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tAlert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [\r\n\t\t\t\t{ text: 'Okay' }\r\n\t\t\t]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log('askForCameraPermissions err', err);\r\n\t\t//todo handle error\r\n\t}\r\n}\r\n//a function that waits for agguments whether to camera roll or galerry checks for permissions and appload them\r\nexport const selectImage = async (isCamera) => {\r\n\ttry {\r\n\t\t//check for permissions\r\n\t\tlet permisions = await askForCameraPermissions();\r\n\t\tif (permisions) {\r\n\t\t\tlet image;\r\n\t\t\t//if person wants to open camera\r\n\t\t\tif (isCamera) {\r\n\t\t\t\timage = await ImagePicker.launchCameraAsync(imagePickerOptions);\r\n\t\t\t} else {\r\n\t\t\t\t//for oppening gallery\r\n\t\t\t\timage = await ImagePicker.launchImageLibraryAsync(imagePickerOptions);\r\n\t\t\t}\r\n\t\t\tconst { canceled, uri } = image;\r\n\t\t\t//if not canceled take the uri of image\r\n\t\t\tif (!canceled) {\r\n\t\t\t\tuploadImage(uri);\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log('selectImage err', err);\r\n\t\t//todo handle err\r\n\t}\r\n};\r\n\r\nexport async function uploadImage(uri) {\r\n\ttry {\r\n\t\tconst response = await fetch(uri);\r\n\t\tconst blob = await response.blob();\r\n\t\tconst snap = await fbApp.storage.ref(\"image\").put(blob);\r\n\t\tconsole.log(sna)\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}