{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\student-information-system\\\\student-information-system\\\\components\\\\HomeScreenField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { COLORS, ICONS_LIGHT, GLOBAL_STYLES } from \"../styles\";\nimport { IconBtn } from \"./IconBtn\";\nimport { shareNewPost, selectActivePosts } from \"../redux/posts\";\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activePostID: selectActivePosts(state)\n  };\n};\n\nexport var HomeScreenField = connect(mapStateToProps, {\n  shareNewPost: shareNewPost\n})(function (_ref) {\n  var activePostID = _ref.activePostID,\n      shareNewPost = _ref.shareNewPost;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPost = _useState2[0],\n      setNewPost = _useState2[1];\n\n  var sharePostHandler = function sharePostHandler() {\n    if (newPost.trim() !== '') {\n      shareNewPost(activePostID, newPost);\n      setNewPost('');\n    }\n  };\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), GLOBAL_STYLES.shaddowBottum),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(TextInput, {\n    value: newPost,\n    onChangeText: setNewPost,\n    style: styles.field,\n    placeholder: \"what is on your mind....\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }), React.createElement(IconBtn, {\n    icon: ICONS_LIGHT.origamiLight,\n    style: styles.icon,\n    onPress: sharePostHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.backgroundLight,\n    height: 100,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    borderBottomEndRadius: 30,\n    borderBottomStartRadius: 30\n  },\n  icon: {\n    width: 40,\n    height: 40\n  },\n  field: {\n    width: '80%',\n    height: '100%',\n    color: COLORS.backgroundDark\n  }\n});","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/components/HomeScreenField.js"],"names":["React","useState","useEffect","COLORS","ICONS_LIGHT","GLOBAL_STYLES","IconBtn","shareNewPost","selectActivePosts","connect","mapStateToProps","state","activePostID","HomeScreenField","newPost","setNewPost","sharePostHandler","trim","styles","container","shaddowBottum","field","origamiLight","icon","StyleSheet","create","backgroundColor","backgroundLight","height","flexDirection","alignItems","justifyContent","paddingHorizontal","borderBottomEndRadius","borderBottomStartRadius","width","color","backgroundDark"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAGA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B;AACA,SAASC,OAAT;AACA,SAASC,YAAT,EAAuBC,iBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACnCC,IAAAA,YAAY,EAAEJ,iBAAiB,CAACG,KAAD;AADI,GAAZ;AAAA,CAAxB;;AAIA,OAAO,IAAME,eAAe,GAAGJ,OAAO,CAACC,eAAD,EAAkB;AAAEH,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2C,gBAAoC;AAAA,MAAjCK,YAAiC,QAAjCA,YAAiC;AAAA,MAAnBL,YAAmB,QAAnBA,YAAmB;;AAAA,kBAC7EN,QAAQ,CAAC,EAAD,CADqE;AAAA;AAAA,MACrGa,OADqG;AAAA,MAC5FC,UAD4F;;AAE7G,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9B,QAAIF,OAAO,CAACG,IAAR,OAAmB,EAAvB,EAA2B;AAC1BV,MAAAA,YAAY,CAACK,YAAD,EAAeE,OAAf,CAAZ;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD,GALD;;AAOA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOG,MAAM,CAACC,SAAd,GAA4Bd,aAAa,CAACe,aAA1C,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAEN,OADR;AAEC,IAAA,YAAY,EAAEC,UAFf;AAGC,IAAA,KAAK,EAAEG,MAAM,CAACG,KAHf;AAIC,IAAA,WAAW,EAAC,0BAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEjB,WAAW,CAACkB,YAA3B;AAAyC,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAAvD;AAA6D,IAAA,OAAO,EAAEP,gBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAWA,CApB8B,CAAxB;AAsBP,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,SAAS,EAAE;AACVO,IAAAA,eAAe,EAAEvB,MAAM,CAACwB,eADd;AAEVC,IAAAA,MAAM,EAAE,GAFE;AAGVC,IAAAA,aAAa,EAAE,KAHL;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,cAAc,EAAE,eALN;AAMVC,IAAAA,iBAAiB,EAAE,EANT;AAOVC,IAAAA,qBAAqB,EAAE,EAPb;AAQVC,IAAAA,uBAAuB,EAAE;AARf,GADqB;AAWhCX,EAAAA,IAAI,EAAE;AACLY,IAAAA,KAAK,EAAE,EADF;AAELP,IAAAA,MAAM,EAAE;AAFH,GAX0B;AAehCP,EAAAA,KAAK,EAAE;AACNc,IAAAA,KAAK,EAAE,KADD;AAENP,IAAAA,MAAM,EAAE,MAFF;AAGNQ,IAAAA,KAAK,EAAEjC,MAAM,CAACkC;AAHR;AAfyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, TextInput } from 'react-native';\r\n\r\nimport { COLORS, ICONS_LIGHT, GLOBAL_STYLES } from '../styles';\r\nimport { IconBtn } from './IconBtn';\r\nimport { shareNewPost, selectActivePosts } from '../redux/posts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tactivePostID: selectActivePosts(state)\r\n});\r\n\r\nexport const HomeScreenField = connect(mapStateToProps, { shareNewPost })(({ activePostID, shareNewPost }) => {\r\n\tconst [ newPost, setNewPost ] = useState('');\r\n\tconst sharePostHandler = () => {\r\n\t\tif (newPost.trim() !== '') {\r\n\t\t\tshareNewPost(activePostID, newPost);\r\n\t\t\tsetNewPost('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={{ ...styles.container, ...GLOBAL_STYLES.shaddowBottum }}>\r\n\t\t\t<TextInput\r\n\t\t\t\tvalue={newPost}\r\n\t\t\t\tonChangeText={setNewPost}\r\n\t\t\t\tstyle={styles.field}\r\n\t\t\t\tplaceholder=\"what is on your mind....\"\r\n\t\t\t/>\r\n\t\t\t<IconBtn icon={ICONS_LIGHT.origamiLight} style={styles.icon} onPress={sharePostHandler} />\r\n\t\t</View>\r\n\t);\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: COLORS.backgroundLight,\r\n\t\theight: 100,\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpaddingHorizontal: 10,\r\n\t\tborderBottomEndRadius: 30,\r\n\t\tborderBottomStartRadius: 30\r\n\t},\r\n\ticon: {\r\n\t\twidth: 40,\r\n\t\theight: 40\r\n\t},\r\n\tfield: {\r\n\t\twidth: '80%',\r\n\t\theight: '100%',\r\n\t\tcolor: COLORS.backgroundDark\r\n\t}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}