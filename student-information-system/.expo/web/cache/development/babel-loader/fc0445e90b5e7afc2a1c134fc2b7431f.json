{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\student-information-system\\\\student-information-system\\\\components\\\\Footer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS } from \"../styles/colors\";\nimport { GLOBAL_STYLES } from \"../styles\";\nimport { FOOTER_ICONS_DATA } from \"../styles/footerIconsData\";\nimport { useNavigation } from '@react-navigation/native';\nexport var Footer = function Footer(_ref) {\n  var style = _ref.style;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      indicator = _useState2[0],\n      setIndicator = _useState2[1];\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var navigationHandler = function navigationHandler(screen) {\n    setIndicator(screen);\n    navigate(screen);\n  };\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.container), style), GLOBAL_STYLES.shaddowTop),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, FOOTER_ICONS_DATA.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      style: [styles.btn],\n      onPress: function onPress() {\n        return navigationHandler(item.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }\n    }, React.createElement(Image, {\n      source: item.icon,\n      style: styles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }), item.name === indicator && React.createElement(View, {\n      style: styles.indicator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 35\n      }\n    }));\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 50,\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    borderTopLeftRadius: 40,\n    borderTopRightRadius: 40,\n    backgroundColor: COLORS.backgroundLight,\n    zIndex: 199\n  },\n  btn: {\n    width: 22,\n    height: 22,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'contain'\n  },\n  indicator: {\n    position: 'absolute',\n    bottom: -14,\n    alignSelf: 'center',\n    backgroundColor: COLORS.acsentColor,\n    width: 40,\n    height: 3\n  }\n});","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/components/Footer.js"],"names":["React","useState","COLORS","GLOBAL_STYLES","FOOTER_ICONS_DATA","useNavigation","Footer","style","indicator","setIndicator","navigate","navigationHandler","screen","styles","container","shaddowTop","map","item","btn","name","icon","StyleSheet","create","height","width","flexDirection","alignItems","justifyContent","borderTopLeftRadius","borderTopRightRadius","backgroundColor","backgroundLight","zIndex","resizeMode","position","bottom","alignSelf","acsentColor"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,SAASC,MAAT;AACA,SAASC,aAAT;AACA,SAASC,iBAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACAN,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MAC5BO,SAD4B;AAAA,MACjBC,YADiB;;AAAA,uBAGfJ,aAAa,EAHE;AAAA,MAG5BK,QAH4B,kBAG5BA,QAH4B;;AAIpC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AACrCH,IAAAA,YAAY,CAACG,MAAD,CAAZ;AACAF,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACA,GAHD;;AAIA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,gDAAOC,MAAM,CAACC,SAAd,GAA4BP,KAA5B,GAAsCJ,aAAa,CAACY,UAApD,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEX,iBAAiB,CAACY,GAAlB,CAAsB,UAACC,IAAD,EAAU;AAChC,WACC,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE,CAAEJ,MAAM,CAACK,GAAT,CAAzB;AAAyC,MAAA,OAAO,EAAE;AAAA,eAAMP,iBAAiB,CAACM,IAAI,CAACE,IAAN,CAAvB;AAAA,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,IAAI,CAACG,IAApB;AAA0B,MAAA,KAAK,EAAEP,MAAM,CAACO,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEEH,IAAI,CAACE,IAAL,KAAcX,SAAd,IAA2B,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,MAAM,CAACL,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7B,CADD;AAMA,GAPA,CADF,CADD;AAYA,CApBM;AAqBP,IAAMK,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,EAAAA,SAAS,EAAE;AACVS,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,aAAa,EAAE,KAHL;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,cAAc,EAAE,cALN;AAMVC,IAAAA,mBAAmB,EAAE,EANX;AAOVC,IAAAA,oBAAoB,EAAE,EAPZ;AAQVC,IAAAA,eAAe,EAAE5B,MAAM,CAAC6B,eARd;AASVC,IAAAA,MAAM,EAAE;AATE,GADqB;AAYhCd,EAAAA,GAAG,EAAE;AACJM,IAAAA,KAAK,EAAE,EADH;AAEJD,IAAAA,MAAM,EAAE,EAFJ;AAGJG,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE;AAJZ,GAZ2B;AAkBhCP,EAAAA,IAAI,EAAE;AACLI,IAAAA,KAAK,EAAE,MADF;AAELD,IAAAA,MAAM,EAAE,MAFH;AAGLU,IAAAA,UAAU,EAAE;AAHP,GAlB0B;AAuBhCzB,EAAAA,SAAS,EAAE;AACV0B,IAAAA,QAAQ,EAAE,UADA;AAEVC,IAAAA,MAAM,EAAE,CAAC,EAFC;AAIVC,IAAAA,SAAS,EAAE,QAJD;AAKVN,IAAAA,eAAe,EAAE5B,MAAM,CAACmC,WALd;AAMVb,IAAAA,KAAK,EAAE,EANG;AAOVD,IAAAA,MAAM,EAAE;AAPE;AAvBqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport { COLORS } from '../styles/colors';\r\nimport { GLOBAL_STYLES } from '../styles';\r\nimport { FOOTER_ICONS_DATA } from '../styles/footerIconsData';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport const Footer = ({ style }) => {\r\n\tconst [ indicator, setIndicator ] = useState('');\r\n\t//indicator will be a props for indicate wich page we r in in future\r\n\tconst { navigate } = useNavigation();\r\n\tconst navigationHandler = (screen) => {\r\n\t\tsetIndicator(screen);\r\n\t\tnavigate(screen);\r\n\t};\r\n\treturn (\r\n\t\t<View style={{ ...styles.container, ...style, ...GLOBAL_STYLES.shaddowTop }}>\r\n\t\t\t{FOOTER_ICONS_DATA.map((item) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TouchableOpacity style={[ styles.btn ]} onPress={() => navigationHandler(item.name)}>\r\n\t\t\t\t\t\t<Image source={item.icon} style={styles.icon} />\r\n\t\t\t\t\t\t{item.name === indicator && <View style={styles.indicator} />}\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</View>\r\n\t);\r\n};\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\theight: 50,\r\n\t\twidth: '100%',\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tborderTopLeftRadius: 40,\r\n\t\tborderTopRightRadius: 40,\r\n\t\tbackgroundColor: COLORS.backgroundLight,\r\n\t\tzIndex: 199\r\n\t},\r\n\tbtn: {\r\n\t\twidth: 22,\r\n\t\theight: 22,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\ticon: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tresizeMode: 'contain'\r\n\t},\r\n\tindicator: {\r\n\t\tposition: 'absolute',\r\n\t\tbottom: -14,\r\n\r\n\t\talignSelf: 'center',\r\n\t\tbackgroundColor: COLORS.acsentColor,\r\n\t\twidth: 40,\r\n\t\theight: 3\r\n\t}\r\n});\r\n//FOOTER_ICONS_DATA.map((item) => (\r\n// \t<TouchableOpacity style={[ styles.btn ]} onPress={navigationHandler(item.name)}>\r\n// \t<Image source={item.icon} style={styles.icon} />\r\n// \t{item.name !== indicator && <View style={styles.indicator} />}\r\n// </TouchableOpacity>\r\n"]},"metadata":{},"sourceType":"module"}