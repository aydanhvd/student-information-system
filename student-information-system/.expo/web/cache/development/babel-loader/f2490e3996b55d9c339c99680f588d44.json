{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Permissions from 'expo-permissions';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function askForCameraPermissions() {\n  var _await$Permissions$as, ios_status, _await$Permissions$as2, result;\n\n  return _regeneratorRuntime.async(function askForCameraPermissions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 11;\n            break;\n          }\n\n          console.log(Platform.OS);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n        case 5:\n          _await$Permissions$as = _context.sent;\n          ios_status = _await$Permissions$as.ios_status;\n          console.log({\n            ios_status: ios_status\n          });\n\n          if (!(ios_status !== 'granted')) {\n            _context.next = 11;\n            break;\n          }\n\n          Alert.alert('Fail', 'Sorry, we need camera roll permissions to make this work!');\n          return _context.abrupt(\"return\", false);\n\n        case 11:\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n        case 13:\n          _await$Permissions$as2 = _context.sent;\n          result = _await$Permissions$as2.result;\n\n          if (!(result === 'granted')) {\n            _context.next = 19;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 19:\n          Alert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [{\n            text: 'Okay'\n          }]);\n          return _context.abrupt(\"return\", false);\n\n        case 21:\n          _context.next = 26;\n          break;\n\n        case 23:\n          _context.prev = 23;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('askForCameraPermissions err', _context.t0);\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 23]], Promise);\n}","map":{"version":3,"sources":["D:/projects/student-information-system/student-information-system/utils/askForCameraPermissions.js"],"names":["Permissions","askForCameraPermissions","Platform","OS","console","log","askAsync","CAMERA_ROLL","ios_status","Alert","alert","CAMERA","result","text"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;;;AAGA,OAAO,SAAeC,uBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEDC,QAAQ,CAACC,EAAT,KAAgB,KAFf;AAAA;AAAA;AAAA;;AAGJC,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,EAArB;AAHI;AAAA,2CAKyBH,WAAW,CAACM,QAAZ,CAAqBN,WAAW,CAACO,WAAjC,CALzB;;AAAA;AAAA;AAKIC,UAAAA,UALJ,yBAKIA,UALJ;AAMJJ,UAAAA,OAAO,CAACC,GAAR,CAAY;AAACG,YAAAA,UAAU,EAAVA;AAAD,WAAZ;;AANI,gBAOAA,UAAU,KAAK,SAPf;AAAA;AAAA;AAAA;;AAQHC,UAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAoB,2DAApB;AARG,2CASI,KATJ;;AAAA;AAAA;AAAA,2CAcoBV,WAAW,CAACM,QAAZ,CAAqBN,WAAW,CAACW,MAAjC,CAdpB;;AAAA;AAAA;AAcGC,UAAAA,MAdH,0BAcGA,MAdH;;AAAA,gBAeDA,MAAM,KAAK,SAfV;AAAA;AAAA;AAAA;;AAAA,2CAgBG,IAhBH;;AAAA;AAkBJH,UAAAA,KAAK,CAACC,KAAN,CAAY,2BAAZ,EAAyC,uDAAzC,EAAkG,CACjG;AAAEG,YAAAA,IAAI,EAAE;AAAR,WADiG,CAAlG;AAlBI,2CAqBG,KArBH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBLT,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAxBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as Permissions from 'expo-permissions';\r\nimport { Platform, Alert } from 'react-native';\r\n\r\nexport async function askForCameraPermissions() {\r\n\ttry {\r\n\t\tif (Platform.OS === 'ios') {\r\n\t\t\tconsole.log(Platform.OS)\r\n\t\t\t//for IOS we need also CAMERA_ROLL\r\n\t\t\tconst { ios_status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\t\t\tconsole.log({ios_status})\r\n\t\t\tif (ios_status !== 'granted') {\r\n\t\t\t\tAlert.alert('Fail', 'Sorry, we need camera roll permissions to make this work!');\r\n\t\t\t\treturn false;\r\n\t\t\t\t//todo handele error\r\n\t\t\t}\r\n\t\t}\r\n\t\t//for both Android and IOS\r\n\t\tconst { result } = await Permissions.askAsync(Permissions.CAMERA);\r\n\t\tif (result === 'granted') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tAlert.alert('Insufficient permissions!', 'You need to grant camera permissions to use this app.', [\r\n\t\t\t\t{ text: 'Okay' }\r\n\t\t\t]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log('askForCameraPermissions err', err);\r\n\t\t//todo handle error\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}